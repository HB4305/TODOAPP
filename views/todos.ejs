<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <title>
    <%= title %>
  </title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const menuToggle = document.getElementById('menuToggle');
      const sidebar = document.getElementById('sidebar');
      const menuOverlay = document.getElementById('menuOverlay');
      const menuIcon = document.getElementById('menuIcon');
      const mainContent = document.getElementById('mainContent');

      // Toggle menu
      menuToggle.addEventListener('click', () => {
        const isOpen = !sidebar.classList.contains('-translate-x-full');
        
        if (isOpen) {
          sidebar.classList.add('-translate-x-full');
          menuOverlay.classList.add('hidden');
          menuIcon.classList.remove('fa-xmark');
          menuIcon.classList.add('fa-bars');
          mainContent.classList.remove('opacity-50');
        } else {
          sidebar.classList.remove('-translate-x-full');
          menuOverlay.classList.remove('hidden');
          menuIcon.classList.remove('fa-bars');
          menuIcon.classList.add('fa-xmark');
          mainContent.classList.add('opacity-50');
        }
      });

      // Close menu when clicking overlay
      menuOverlay.addEventListener('click', () => {
        sidebar.classList.add('-translate-x-full');
        menuOverlay.classList.add('hidden');
        menuIcon.classList.remove('fa-xmark');
        menuIcon.classList.add('fa-bars');
        mainContent.classList.remove('opacity-50');
      });

      // Close menu when clicking a link
      document.querySelectorAll('#sidebar a').forEach(link => {
        link.addEventListener('click', () => {
          sidebar.classList.add('-translate-x-full');
          menuOverlay.classList.add('hidden');
          menuIcon.classList.remove('fa-xmark');
          menuIcon.classList.add('fa-bars');
          mainContent.classList.remove('opacity-50');
        });
      });
    });

    let todos = [];

    const showToast = (msg) => {
      const t = document.getElementById("toast");
      t.textContent = msg;
      t.classList.remove("opacity-0", "translate-y-3");
      setTimeout(() => t.classList.add("opacity-0", "translate-y-3"), 1500);
    }

    const loadTodos = () => {
      fetch("/api/todos", { cache: 'no-store' })
        .then(res => res.json())
        .then(data => {
          todos = data;
          renderTodoList(data);
        });
    }

    const addTodo = () => {
      const title = document.getElementById("title").value.trim();
      if (!title) return false;

      fetch(`/api/todos`, {
        method: "POST",
        cache: 'no-store',
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ title }),
      })
        .then(res => res.json())
        .then(() => {
          document.getElementById("title").value = "";
          loadTodos();
          showToast("Todo added");
        });

      return false;
    }

    const toogleTodo = (id) => {
      const todo = todos.find(t => t.id === id);

      fetch(`/api/todos/${id}`, {
        method: "PUT",
        cache: 'no-store',
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ completed: !todo.completed }),
      })
        .then(() => {
          loadTodos();
          showToast(todo.completed ? "Marked undone" : "Marked done");
        });

      return false;
    }

    const deleteTodo = (id) => {
      fetch(`/api/todos/${id}`, { method: "DELETE", cache: 'no-store' })
        .then(res => {
          if (!res.ok) throw new Error();
          loadTodos();
          showToast("Deleted");
        })
        .catch(() => alert("Delete failed"));

      return false;
    }

    const renderTodoList = (todos) => {
      const completedCount = todos.filter(t => t.completed).length;
      const totalCount = todos.length;
      const progress = totalCount ? Math.round((completedCount / totalCount) * 100) : 0;

      document.getElementById("todos").innerHTML = `
          ${todos.length > 0 ? `
            <div class="mb-6 bg-gradient-to-r from-blue-500 via-indigo-500 to-purple-500 text-white p-6 rounded-2xl shadow-xl">
              <div class="flex items-center justify-between mb-4">
                <div>
                  <p class="text-sm font-medium opacity-90 mb-1">Tiến độ hoàn thành</p>
                  <p class="text-3xl font-bold">${completedCount} / ${totalCount}</p>
                </div>
                <div class="text-6xl animate-bounce">
                  ${completedCount === totalCount && totalCount > 0 ? '<i class="fa-solid fa-trophy"></i>' : '<i class="fa-solid fa-tasks"></i>'}
                </div>
              </div>
              <div class="relative">
                <div class="h-3 bg-white/30 rounded-full overflow-hidden backdrop-blur-sm">
                  <div class="h-full bg-gradient-to-r from-green-400 to-emerald-500 rounded-full transition-all duration-700 ease-out shadow-lg"
                    style="width: ${progress}%;"></div>
                </div>
                <p class="text-right text-xs font-semibold mt-2 opacity-90">${progress}% hoàn thành</p>
              </div>
            </div>
          ` : ''}

        <ul class="space-y-2">
            ${todos.length === 0 ? `
              <li class="text-center py-16 bg-white/80 backdrop-blur-sm rounded-3xl shadow-lg border-2 border-dashed border-blue-300">
                <div class="text-7xl mb-4 animate-pulse"><i class="fas fa-clipboard-list"></i></div>
                <p class="text-gray-600 text-xl font-medium mb-2">Chưa có task nào</p>
                <p class="text-gray-400 text-sm">Hãy thêm task đầu tiên!</p>
              </li>
            ` : todos
          .map(
            t => `
              <li id="todo-${t.id}"
                class="group relative flex items-center gap-4 p-5 bg-white rounded-2xl shadow-md hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-1 border-l-4 ${t.completed ? "border-green-500 bg-gray-50" : "border-blue-500"
              }">

                <span class="flex-1 text-lg font-medium ${t.completed ? "line-through text-gray-400" : "text-gray-800"
              }">${t.title}</span>

                <div class="flex gap-2 opacity-100 md:opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                  <button type="button"
                    class="px-5 py-2.5 ${t.completed ?
                "bg-gradient-to-r from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700" :
                "bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700"
              } text-white text-sm font-semibold rounded-xl transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl"
                    onclick="return toogleTodo(${t.id})">
                    ${t.completed ? '<i class="fas fa-undo mr-1"></i>Hoàn tác' : '<i class="fas fa-check mr-1"></i>Xong'}
                  </button>

                  <button type="button"
                    class="px-5 py-2.5 bg-gradient-to-r from-red-500 to-pink-600 hover:from-red-600 hover:to-pink-700 text-white text-sm font-semibold rounded-xl transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl"
                    onclick="return deleteTodo(${t.id})">
                    <i class="fas fa-trash mr-1"></i>Xóa
                  </button>
                </div>
              </li>`
          )
          .join("")}
          </ul>
        `;
    }

    loadTodos();
  </script>
</head>

<body class="min-h-screen bg-gradient-to-br from-blue-100 via-white to-blue-300 font-sans flex flex-col md:flex-row">
  
  <!-- Mobile Hamburger Button -->
  <button id="menuToggle" class="lg:hidden fixed top-4 left-4 z-50 p-2 bg-blue-600 text-white rounded-lg shadow-lg transition-all duration-300">
    <i id="menuIcon" class="fa-solid fa-bars text-xl"></i>
  </button>

  <!-- Overlay for mobile menu -->
  <div id="menuOverlay" class="fixed inset-0 bg-opacity-10 lg:hidden z-30 hidden transition-opacity duration-300"></div>

  <!-- Sidebar -->
  <aside id="sidebar" class="fixed lg:static flex flex-col w-64 bg-white shadow-xl p-8 h-screen lg:h-screen lg:max-h-screen z-40 -translate-x-full lg:translate-x-0 transition-transform duration-300 overflow-y-auto lg:overflow-hidden">
    <div class="flex-1 mt-12 lg:mt-0">
      <h2 class="text-3xl font-bold text-blue-600 mb-8">Menu</h2>

      <nav class="space-y-2">
        <a href="/"
          class="flex items-center gap-3 px-4 py-3 text-gray-700 hover:bg-gray-100 rounded-lg font-medium transition">
          <i class="fa-solid fa-house"></i>
          <span>Home</span>
        </a>
        <a href="/todos"
          class="flex items-center gap-3 px-4 py-3 bg-blue-500 text-white rounded-lg font-medium shadow-md hover:bg-blue-600 transition">
          <i class="fa-solid fa-clipboard-list"></i>
          <span>Todos</span>
        </a>
      </nav>
    </div>

    <!-- Footer inside sidebar -->
    <footer class="text-center text-gray-400 text-sm border-t pt-4 mt-auto">
      <p class="mb-2">Kết nối với tôi</p>
      <a href="https://www.facebook.com/share/g/19oiQixM4S/"
        class="text-blue-600 text-xl hover:text-blue-400 transition-colors duration-300">
        <i class="fab fa-facebook-f"></i>
      </a>
    </footer>
  </aside>

  <!-- Main Content -->
  <main id="mainContent" class="flex-1 p-4 md:p-6 lg:p-10 overflow-y-auto transition-opacity duration-300 pt-20 lg:pt-0">
    <div class="max-w-4xl mx-auto">
      <div class="mb-6 md:mb-8 lg:mb-10">
        <h1
          class="text-3xl md:mt-12 md:text-5xl lg:text-6xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-blue-600 via-indigo-600 to-purple-600 mb-3">
          <%= title %>
        </h1>
      </div>

      <div class="bg-white/90 backdrop-blur-sm p-4 md:p-6 lg:p-8 rounded-3xl shadow-2xl mb-6 md:mb-8 border border-gray-100">
        <form class="flex flex-col md:flex-row gap-3 md:gap-4" onsubmit="return addTodo();">
          <div class="flex-1 relative">
            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none text-2xl">
              <i class="fa-solid fa-pen"></i>
            </div>
            <input id="title" type="text" placeholder="Thêm task mới..." required
              class="w-full pl-14 pr-4 py-3 md:py-4 text-base md:text-lg border-2 border-gray-200 rounded-2xl focus:outline-none focus:ring-4 focus:ring-blue-300 focus:border-blue-500 transition-all duration-200 bg-gray-50 focus:bg-white" />
          </div>

          <button type="submit"
            class="px-6 md:px-8 py-3 md:py-4 bg-gradient-to-r from-blue-600 via-indigo-600 to-purple-600 hover:from-blue-700 hover:via-indigo-700 hover:to-purple-700 text-white text-base md:text-lg font-bold rounded-2xl transition-all duration-300 transform hover:scale-105 hover:shadow-2xl shadow-xl flex items-center justify-center gap-2 whitespace-nowrap">
            <i class="fas fa-plus"></i>
            <span>Thêm Task</span>
          </button>
        </form>
      </div>

      <div id="todos" class="mb-8"></div>
      <div class="text-center mt-10">
        <a href="/"
          class="inline-flex items-center gap-2 px-6 py-3 text-blue-600 hover:text-blue-700 font-semibold text-lg bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-200 transform hover:-translate-y-1">
          <i class="fas fa-arrow-left"></i>
          <span>Về trang chủ</span>
        </a>
      </div>
    </div>
  </main>

  <div id="toast"
    class="fixed bottom-8 right-8 bg-gradient-to-r from-green-500 via-emerald-500 to-teal-500 text-white px-6 py-4 rounded-2xl shadow-2xl opacity-0 translate-y-3 transition-all duration-300 text-lg font-bold flex items-center gap-3 backdrop-blur-sm">
    <i class="fas fa-check-circle text-2xl"></i>
    <span>Thành công!</span>
  </div>
</body>

</html>